# .github/workflows/update-image-tag.yml
name: Update Image Tag & Create PR

on:
  workflow_dispatch: # Allows manual triggering from the Actions tab
    inputs:
      new_image_tag:
        description: 'The new image tag to set (e.g., 1.25.1 or latest)'
        required: true
        type: string
      manifest_file_path:
        description: 'Path to the Kubernetes manifest file (e.g., simple-nginx/deployment.yaml)'
        required: true
        type: string
        default: 'simple-nginx/deployment.yaml' # Defaulting to your directory
      container_name:
        description: 'Name of the container in the deployment to update'
        required: true
        type: string
        default: 'nginx' # Matches your deployment.yaml container name
      image_name_prefix:
        description: 'The prefix of the image name (e.g., nginx or your-dockerhub-username/my-app)'
        required: true
        type: string
        default: 'nginx' # Matches your deployment.yaml image prefix
      target_branch:
        description: 'The base branch for the pull request'
        required: true
        type: string
        default: 'main'

jobs:
  update-manifest-and-create-pr:
    runs-on: ubuntu-latest
    # No 'permissions: contents: write' needed at the job level if using a PAT for create-pull-request
    # However, the checkout action might benefit from it for pushing to a new branch.
    # The create-pull-request action can use its own PAT or the default GITHUB_TOKEN.
    # For creating a PR, GITHUB_TOKEN is usually sufficient.

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.target_branch }} # Checkout the target branch to create a new branch from it

      - name: Install yq (YAML processor)
        run: |
          YQ_VERSION="v4.40.5" 
          sudo wget "https://github.com/mikefarah/yq/releases/download/${YQ_VERSION}/yq_linux_amd64" -O /usr/bin/yq && sudo chmod +x /usr/bin/yq
          echo "yq version $(yq --version) installed."

      - name: Update image tag in manifest
        id: update_image
        env:
          YQ_NEW_TAG: ${{ github.event.inputs.new_image_tag }}
          YQ_MANIFEST_FILE: ${{ github.event.inputs.manifest_file_path }}
          YQ_CONTAINER_NAME: ${{ github.event.inputs.container_name }}
          YQ_IMAGE_PREFIX: ${{ github.event.inputs.image_name_prefix }}
        run: |
          echo "Attempting to update $YQ_MANIFEST_FILE:"
          echo "  Container: '$YQ_CONTAINER_NAME'"
          echo "  Image Prefix: '$YQ_IMAGE_PREFIX'"
          echo "  New Tag: '$YQ_NEW_TAG'"

          if [ ! -f "$YQ_MANIFEST_FILE" ]; then
            echo "Error: Manifest file '$YQ_MANIFEST_FILE' not found!"
            exit 1
          fi
          
          ORIGINAL_CONTENT=$(cat "$YQ_MANIFEST_FILE")

          yq eval --inplace \
            '(.spec.template.spec.containers[] | select(.name == strenv(YQ_CONTAINER_NAME) and ((.image | split(":") | .[0]) == strenv(YQ_IMAGE_PREFIX)) )) .image = strenv(YQ_IMAGE_PREFIX) + ":" + strenv(YQ_NEW_TAG)' \
            "$YQ_MANIFEST_FILE"
            
          echo "--- Manifest file $YQ_MANIFEST_FILE after potential update: ---"
          cat "$YQ_MANIFEST_FILE"
          echo "---------------------------------------------------------"

          UPDATED_CONTENT=$(cat "$YQ_MANIFEST_FILE")
          if [ "$ORIGINAL_CONTENT" == "$UPDATED_CONTENT" ]; then
            echo "Image tag was already set to $YQ_NEW_TAG or container/image prefix not found. No changes made."
            echo "NO_CHANGES=true" >> $GITHUB_OUTPUT
          else
            echo "Image tag updated in $YQ_MANIFEST_FILE."
            echo "NO_CHANGES=false" >> $GITHUB_OUTPUT
          fi

      - name: Create Pull Request
        if: steps.update_image.outputs.NO_CHANGES == 'false' # Only run if changes were made
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ secrets.GITHUB_TOKEN }} # Uses the default GitHub token
          commit-message: "Update image for ${{ github.event.inputs.container_name }} to ${{ github.event.inputs.new_image_tag }}"
          committer: GitHub Actions <actions@github.com> # Or your bot user
          author: GitHub Actions <actions@github.com>
          signoff: false
          branch: "image-update/${{ github.event.inputs.container_name }}-${{ github.event.inputs.new_image_tag }}" # Name of the new branch
          delete-branch: true # Automatically delete the branch when the PR is merged
          title: "Update ${{ github.event.inputs.container_name }} image to ${{ github.event.inputs.new_image_tag }}"
          body: |
            Automated image update for container `${{ github.event.inputs.container_name }}`.
            New tag: `${{ github.event.inputs.new_image_tag }}`
            Manifest file: `${{ github.event.inputs.manifest_file_path }}`
            
            This PR was created automatically by the "Update Image Tag" GitHub Action.
          labels: |
            automated-pr
            image-update
          assignees: '' # Optional: your GitHub username
          reviewers: '' # Optional: your GitHub username or team
          # team-reviewers: |
          #   owners
          #   qa-team
          draft: false
          base: ${{ github.event.inputs.target_branch }} # Branch to create the PR against (e.g., main)

